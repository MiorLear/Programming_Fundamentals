# -*- coding: utf-8 -*-
'''
11. Recursión Grupo 12:00-13:00.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13BJJ1F0bjuTlA3toppzFDRBYJqzRi_Sm
'''

# Crear una función que muestres una cuenta
# 5... 4... 3... 2... 1... ¡Listo!

import time

# Utilizando estructura iterativa
def cuenta_regresiva_iterativa(n):
  for i in range(n,0,-1):
    print(i, end="... ")
    time.sleep(0.5)
  print("¡Despegue!")

def cuenta_regresiva_recursiva(n):
  if n <= 0:
    print("¡Despegue!")
  else:
    print(n, end="... ")
    time.sleep(0.5)
    cuenta_regresiva_recursiva(n-1)

# cuenta_regresiva_iterativa(10)
cuenta_regresiva_recursiva(10)

# Crear dos funciones (iterativa y recursiva) que genere y devuelva
# el abecedario

def generar_alfabeto_iterativo():
  alfabeto = ''
  for i in range(ord('a'), ord('z')+1, 1):
    alfabeto += chr(i) + ', '
  alfabeto = alfabeto.rstrip(', ')
  return alfabeto

#print(generar_alfabeto_iterativo())

def generar_alfabeto_recursivo(letra):
  if letra == 'z':
    return 'z'
  else:
    return letra + ", " + generar_alfabeto_recursivo(chr(ord(letra) + 1))

print(generar_alfabeto_recursivo('a'))

# Crear una funcion para calcular el factorial de un numero
def factorial (n):
  if n == 0:
    return 1
  else:
    return n * factorial (n - 1)

print(factorial(5))

'''
Crear una función que cuente recursivamente
los vecinos en una matriz binaria
Condición: contar vecinos que se encuentre horizontal y verticalmente
'''